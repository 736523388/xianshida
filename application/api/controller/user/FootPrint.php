<?php
namespace app\api\controller\user;
use app\api\controller\BasicUserApi;
use app\api\service\GoodsService;
use app\api\service\IntegralService;
use controller\BasicApi;
use think\Db;
use think\exception\HttpResponseException;

class FootPrint extends BasicApi
{
    public $table = 'StoreFootprint';
    public $pagesize = 20;
    public $price_field = 'market_price';
    public $hide_price_field = 'selling_price';
    public $hide_price_txt = '会员价';
    public $mid = 0;
    public function __construct()
    {
        parent::__construct();
        $token = request()->header('token', input('token', ''));
        $user_level = get_login_info($token,'level');
        $this->mid = get_login_info($token,'id');
        if($user_level){
            $this->price_field = 'selling_price';
            $this->hide_price_field = 'market_price';
            $this->hide_price_txt = '原价';
        }
    }
    public function success($msg, $data = [], $code = 1)
    {
        parent::success($msg, ['data' => $data,'show_price' => $this->price_field,'hide_price' => $this->hide_price_field,'hide_price_txt' => $this->hide_price_txt], $code); // TODO: Change the autogenerated stub
    }
    /**
     * @Notes: 查询基础sql
     * @return \think\db\Query
     * @throws \think\exception\DbException
     * @author: Forska
     * @email: 736523388@qq.com
     * @DateTime: 2018/12/21 17:41
     */
    public function baseSql(){
        $spesql = Db::table('store_goods_list')
            ->where(['status' => '1','is_deleted' => '0'])
            ->field('left(group_concat('.$this->price_field.' order by '.$this->price_field.'),
            locate(\',\',concat(group_concat('.$this->price_field.' order by '.$this->price_field.'),\',\'))-1
        )+0 '.$this->price_field.','.
                'left(group_concat('.$this->hide_price_field.' order by '.$this->price_field.'),
            locate(\',\',concat(group_concat('.$this->hide_price_field.' order by '.$this->price_field.'),\',\'))-1
        )+0 '.$this->hide_price_field.','.
                'left(group_concat(goods_spec order by '.$this->price_field.'),
            locate(\',\',concat(group_concat(goods_spec order by '.$this->price_field.'),\',\'))-1
        ) goods_spec,goods_id')
            ->group('goods_id')
            ->buildSql();
        $db = Db::table('store_goods')
            ->alias('a')
            ->join([$spesql=> 'b'], 'a.id = b.goods_id')
            ->where(['a.is_deleted' => '0','a.status' => '1']);
        return $db;
    }
    /**
     * @Notes: 积分记录列表
     * @throws \think\Exception
     * @throws \think\exception\PDOException
     * @author: Forska
     * @email: 736523388@qq.com
     * @DateTime: 2018/12/6 14:37
     */
    public function index(){
        $footprint = [];
        if($this->mid){
            $footprint = Db::name($this->table)->where('mid',$this->mid)->where('is_deleted','0')->where('create_at','>',date('Y-m-d 00:00:00',strtotime('-7 day')))->order('create_at desc')->select();
            $goods_ids = array_unique(array_column($footprint, 'goods_id'));
            $db = $this->baseSql();
            $db->whereIn('a.id',$goods_ids);
            $list = (array)$db->order('sort asc,id desc')->select();
            GoodsService::buildGoodsList($list);
            foreach ($footprint as &$item) {
                foreach ($list as $goods) {
                    if($goods['id'] === $item['goods_id']){
                        $item = array_merge($goods,['foot_id' => $item['id'],'create_at' => date('Y-m-d',strtotime($item['create_at']))]);
                    }
                }
            }
            $footprint = group_same_key($footprint,'create_at');
        }
        $this->success('success',$footprint);

    }
    public function del(){
        $foot_id = $this->request->param('foot_id');
        if($this->mid){
            Db::name($this->table)->where('mid',$this->mid)->where('id',$foot_id)->setField('is_deleted', '1');
            $this->success('操作成功！');
        }else{
            $this->error('操作失败！');
        }
    }
}